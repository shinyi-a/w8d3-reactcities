{"version":3,"sources":["imageData.js","App.js","reportWebVitals.js","index.js"],"names":["imagesArr","img","city","App","useState","bigImage","setBigImage","Clicked","event","clickedimg","target","src","className","id","map","alt","onClicked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMA2CiBA,G,MA3CC,CACd,CACEC,IACE,wIACFC,KAAM,UAER,CACED,IACE,wIACFC,KAAM,aAER,CACED,IACE,wIACFC,KAAM,UAER,CACED,IACE,qIACFC,KAAM,SAER,CACED,IACE,wIACFC,KAAM,UAER,CACED,IACE,8GACFC,KAAM,SAER,CACED,IACE,wIACFC,KAAM,UAER,CACED,IACE,wIACFC,KAAM,W,OCLGC,MA9Bf,WAAe,MAGmBC,mBAASJ,EAAU,GAAGC,KAHzC,mBAGNI,EAHM,KAGIC,EAHJ,KAOb,SAASC,EAAQC,GACf,IAAMC,EAAaD,EAAME,OAAOC,IAChCL,EAAYG,GAGd,OACE,sBAAKG,UAAU,MAAf,UACE,qDACA,sBAAKC,GAAG,UAAR,UACE,qBAAKA,GAAG,aAAR,SAECb,EAAUc,KAAI,SAACb,GACd,OAAO,qBAAoBW,UAAU,QAAQD,IAAKV,EAAIA,IAAKc,IAAKd,EAAIC,KAAMc,UAAWT,GAApEN,EAAIC,WAKvB,qBAAKW,GAAG,WAAWF,IAAKN,EAAUU,IAAI,oBChB/BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ed9c83c4.chunk.js","sourcesContent":["const imagesArr = [\n    {\n      img:\n        'https://images.unsplash.com/photo-1505761671935-60b3a7427bad?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'london'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1534351590666-13e3e96b5017?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'amsterdam'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1524820197278-540916411e20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'sydney'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1547448526-5e9d57fa28f7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'tokyo'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1592409065737-a253f2900fa8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'dallas'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1502602898657-3e91760cbb34?ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60',\n      city: 'paris'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1505884065216-0661d68e5c47?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'athens'\n    },\n    {\n      img:\n        'https://images.unsplash.com/photo-1512453979798-5ea266f8880c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n      city: 'dubai'\n    }\n  ];\n  \n  export default imagesArr;\n  ","import React, { useState } from \"react\";\nimport './App.css';\nimport imagesArr from './imageData';\n\nfunction App() {\n  // USE useState TO CREATE  [bigImage, setBigImage]\n  // AND SET IT TO THE IMAGE URL OF THE FIRST ELEMENT IN THE ARRAY\n  const [bigImage, setBigImage] = useState(imagesArr[0].img);\n\n\t// CREATE A HANDLE CLICK FUNCTION THAT ACCEPTS AN IMAGE URL\n\t// THE FUNCTION SHOULD CALL setBigImage AND PASS IT THE URL\n  function Clicked(event) {\n    const clickedimg = event.target.src;\n    setBigImage(clickedimg);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Cities Of The World</h1>\n      <div id=\"wrapper\">\n        <div id=\"thumbnails\">\n        {/* RENDER THE IMAGES ARRAY  */}\n        {imagesArr.map((img) => {\n          return <img key={img.city} className=\"thumb\" src={img.img} alt={img.city} onClicked={Clicked}></img>\n        })}\n        </div>\n        {/* THE SRC IMAGE URL SHOULD BE SET TO THE VALUE THAT IS STORED IN bigImage */}\n        {/* <img src=\"\" id=\"bigimage\" alt='bigImage'/> */}\n        <img id=\"bigimage\" src={bigImage} alt=\"bigImage\"></img>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}